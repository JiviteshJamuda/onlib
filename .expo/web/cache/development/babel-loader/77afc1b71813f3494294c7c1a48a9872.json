{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"G:\\\\codes\\\\tabNavigation\\\\screens\\\\BookTransactionScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport firebase from \"firebase\";\nimport db from \"../config\";\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransactionScreen).call(this));\n\n    _this.getCameraPermissions = function _callee(ID) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: ID,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, buttonState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              buttonState = _this.state.buttonState;\n\n              if (buttonState === \"bookID\") {\n                _this.setState({\n                  scanned: true,\n                  scannedData: data,\n                  buttonState: 'normal'\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.initiateBookIssue = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              db.collection(\"transaction\").add({\n                \"studentID\": _this.state.scannedStudentID,\n                \"bookID\": _this.state.scannedBookID,\n                \"date\": firebase.firestore.Timestamp.now().toDate(),\n                \"transactionType\": \"issue\"\n              });\n              db.collection(\"books\");\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    };\n\n    _this.handleTransaction = function _callee4() {\n      var transactionMessage;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              db.collection(\"books\").doc(_this.state.scannedBookID).get().then(function (doc) {\n                var book = doc.data();\n\n                if (book.bookAvailability === true) {\n                  _this.initiateBookIssue();\n\n                  transactionMessage = \"bookIssue\";\n                } else {\n                  _this.initiateBookReturn();\n\n                  transactionMessage = \"bookReturn\";\n                }\n              });\n\n              _this.setState({\n                transactionMessage: transactionMessage\n              });\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedData: '',\n      buttonState: 'normal',\n      scannedBookID: \"\",\n      scannedStudentID: \"\",\n      transactionMessage: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/booklogo.jpg\"),\n          style: {\n            width: 100,\n            height: 100\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          }\n        }), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"bookID\",\n          value: this.state.scannedBookID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"bookID\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"studentID\",\n          value: this.state.scannedStudentID,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"studentID\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          }\n        }, \"Scan\"))), React.createElement(TouchableOpacity, {\n          style: styles.submitButton,\n          onPress: function onPress() {\n            _this2.handleTransaction();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          }\n        }, React.createElement(Text, {\n          style: styles.submitButtonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          }\n        }, \"Submit\")));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  buttonText: {\n    fontSize: 20\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  },\n  submitButton: {\n    backgroundColor: \"red\",\n    width: 80,\n    height: 45,\n    alignItems: \"center\",\n    marginLeft: 20,\n    justifyContent: \"center\"\n  },\n  submitButtonText: {\n    textAlign: \"center\",\n    fontSize: 22,\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["G:/codes/tabNavigation/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","firebase","db","TransactionScreen","getCameraPermissions","ID","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedData","initiateBookIssue","collection","add","scannedStudentID","scannedBookID","firestore","Timestamp","now","toDate","handleTransaction","doc","get","then","book","bookAvailability","transactionMessage","initiateBookReturn","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","inputView","inputBox","scanButton","buttonText","submitButton","submitButtonText","Component","create","flex","justifyContent","alignItems","displayText","fontSize","textDecorationLine","flexDirection","margin","borderWidth","borderRightWidth","backgroundColor","borderLeftWidth","marginLeft","textAlign","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Text, View, TouchableOpacity, StyleSheet, TextInput, Image } from 'react-native';\r\nimport * as Permissions from 'expo-permissions';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport firebase from \"firebase\"\r\nimport db from \"../config\"\r\n\r\nexport default class TransactionScreen extends React.Component {\r\n    constructor(){\r\n      super();\r\n      this.state = {\r\n        hasCameraPermissions: null,\r\n        scanned: false,\r\n        scannedData: '',\r\n        buttonState: 'normal',\r\n        scannedBookID: \"\",\r\n        scannedStudentID:\"\",\r\n        transactionMessage : \"\"\r\n      }\r\n    }\r\n\r\n    getCameraPermissions = async (ID) =>{\r\n      const {status} = await Permissions.askAsync(Permissions.CAMERA);\r\n      \r\n      this.setState({\r\n        /*status === \"granted\" is true when user has granted permission\r\n          status === \"granted\" is false when user has not granted the permission\r\n        */\r\n        hasCameraPermissions: status === \"granted\",\r\n        buttonState: ID,\r\n        scanned: false\r\n      });\r\n    }\r\n\r\n    handleBarCodeScanned = async({type, data})=>{\r\n      const {buttonState} = this.state\r\n      if(buttonState === \"bookID\"){\r\n\r\n      \r\n      this.setState({\r\n        scanned: true,\r\n        scannedData: data,\r\n        buttonState: 'normal'\r\n      });\r\n    }\r\n  }\r\n\r\n  initiateBookIssue = async()=>{\r\n    db.collection(\"transaction\").add({\r\n      \"studentID\" : this.state.scannedStudentID,\r\n      \"bookID\" : this.state.scannedBookID,\r\n      \"date\" : firebase.firestore.Timestamp.now().toDate(),\r\n      \"transactionType\" : \"issue\"\r\n    })\r\n    db.collection(\"books\")\r\n  }\r\n\r\n  handleTransaction = async()=>{\r\n    var transactionMessage;\r\n    db.collection(\"books\").doc(this.state.scannedBookID).get()\r\n    .then((doc)=>{\r\n      \r\n      var book = doc.data();\r\n      if (book.bookAvailability === true){\r\n        this.initiateBookIssue();\r\n        transactionMessage = \"bookIssue\"\r\n      } else {\r\n        this.initiateBookReturn();\r\n        transactionMessage = \"bookReturn\"\r\n      }\r\n\r\n    })\r\n\r\n    this.setState({\r\n      transactionMessage : transactionMessage\r\n    })\r\n\r\n  }\r\n\r\n    render() {\r\n      const hasCameraPermissions = this.state.hasCameraPermissions;\r\n      const scanned = this.state.scanned;\r\n      const buttonState = this.state.buttonState;\r\n\r\n      if (buttonState !== \"normal\" && hasCameraPermissions){\r\n        return(\r\n          <BarCodeScanner\r\n            onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\r\n            style={StyleSheet.absoluteFillObject}\r\n          />\r\n        );\r\n      }\r\n\r\n      else if (buttonState === \"normal\"){\r\n        return(\r\n          <View style={styles.container}>\r\n            <Image source = {require(\"../assets/booklogo.jpg\")} style= {{width : 100,height:100}} />\r\n          <View style={styles.inputView}>\r\n            <TextInput style={styles.inputBox} placeholder = \"bookID\" value={this.state.scannedBookID} />\r\n            <TouchableOpacity style = {styles.scanButton} onPress={()=>{\r\n              this.getCameraPermissions(\"bookID\");\r\n            }} >\r\n              <Text style={styles.buttonText}>Scan</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={styles.inputView}>\r\n            <TextInput style={styles.inputBox} placeholder=\"studentID\" value={this.state.scannedStudentID} />\r\n            <TouchableOpacity style={styles.scanButton} onPress={()=>{\r\n              this.getCameraPermissions(\"studentID\")\r\n            }} >\r\n              <Text style={styles.buttonText}>Scan</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <TouchableOpacity style={styles.submitButton} onPress={()=>{\r\n            this.handleTransaction()\r\n          }}>\r\n            <Text style={styles.submitButtonText}>Submit</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n    displayText:{\r\n      fontSize: 15,\r\n      textDecorationLine: 'underline'\r\n    },\r\n    \r\n    buttonText:{\r\n      fontSize: 20,\r\n    },\r\n    inputView:{ flexDirection: 'row', margin: 20 }, \r\n    inputBox:{ width: 200, height: 40, borderWidth: 1.5, borderRightWidth: 0, fontSize: 20 }, \r\n    scanButton:{ backgroundColor: '#66BB6A', width: 50, borderWidth: 1.5, borderLeftWidth: 0 },\r\n    submitButton : {backgroundColor:\"red\",width:80,height:45, alignItems:\"center\", marginLeft:20, justifyContent:\"center\"},\r\n    submitButtonText:{textAlign:\"center\", fontSize:22, color : \"white\"}\r\n  });"]},"metadata":{},"sourceType":"module"}