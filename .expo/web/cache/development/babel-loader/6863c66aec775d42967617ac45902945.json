{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"G:\\\\codes\\\\tabNavigation\\\\screens\\\\BookTransactionScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\nvar BookTransactionScreen = function (_React$Component) {\n  _inherits(BookTransactionScreen, _React$Component);\n\n  function BookTransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, BookTransactionScreen);\n\n    _this.state = {\n      hasCameraPermission: null,\n      scanned: false,\n      scannedData: \"\",\n      buttonState: \"normal\"\n    };\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(BookTransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var hasCameraPermission = this.state.hasCameraPermission;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState === \"clicked\" && hasCameraPermission) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          }\n        }, \"hasCameraPermission === true? this.state.scannedData : \\\"Request Camera Permission\\\"\"), React.createElement(TouchableOpacity, {\n          onPress: this.getPermissionsAsync,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          }\n        }, \"Scan QR code\")));\n      }\n    }\n  }]);\n\n  return BookTransactionScreen;\n}(React.Component);\n\nexport { BookTransactionScreen as default };","map":{"version":3,"sources":["G:/codes/tabNavigation/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","BookTransactionScreen","state","hasCameraPermission","scanned","scannedData","buttonState","undefined","handleBarCodeScanned","flex","justifyContent","alignItems","getPermissionsAsync","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,SAASC,cAAT,QAA+B,sBAA/B;;IAEqBC,qB;;;AACnB,mCAAa;AAAA;;AAAA;;AACX,UAAKC,KAAL,GAAa;AACXC,MAAAA,mBAAmB,EAAE,IADV;AAEXC,MAAAA,OAAO,EAAE,KAFE;AAGXC,MAAAA,WAAW,EAAE,EAHF;AAIXC,MAAAA,WAAW,EAAG;AAJH,KAAb;AADW;AAQZ;;;;6BAOU;AACP,UAAMH,mBAAmB,GAAG,KAAKD,KAAL,CAAWC,mBAAvC;AACA,UAAMC,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAA3B;AACA,UAAME,WAAW,GAAG,KAAKJ,KAAL,CAAWI,WAA/B;;AAEA,UAAGA,WAAW,KAAK,SAAhB,IAA6BH,mBAAhC,EAAoD;AAClD,eACE,oBAAC,cAAD;AACA,UAAA,gBAAgB,EAAEC,OAAO,GAAGG,SAAH,GAAe,KAAKC,oBAD7C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,OAPD,MAOO,IAAGF,WAAW,KAAK,QAAnB,EAA4B;AACjC,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEG,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,cAAc,EAAE,QAA3B;AAAqCC,YAAAA,UAAU,EAAE;AAAjD,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,kGADF,EAEE,oBAAC,gBAAD;AACA,UAAA,OAAO,EAAE,KAAKC,mBADd;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CAFF,CADF;AASD;AAEF;;;;EAxC8Cd,KAAK,CAACe,S;;SAApCZ,qB","sourcesContent":["import React from 'react';\r\nimport { Text, View, TouchableOpacity } from 'react-native';\r\nimport * as Permissions from 'expo-permissions';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\n\r\nexport default class BookTransactionScreen extends React.Component {\r\n  constructor(){\r\n    this.state = {\r\n      hasCameraPermission: null,\r\n      scanned: false,\r\n      scannedData: \"\",\r\n      buttonState : \"normal\",\r\n      \r\n    }\r\n  }\r\n\r\n  getPermissionsAsync = async () => {\r\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n    this.setState({ hasCameraPermission: status === 'granted' });\r\n  };\r\n\r\n    render() {\r\n      const hasCameraPermission = this.state.hasCameraPermission;\r\n      const scanned = this.state.scanned;\r\n      const buttonState = this.state.buttonState;\r\n      \r\n      if(buttonState === \"clicked\" && hasCameraPermission){\r\n        return(\r\n          <BarCodeScanner\r\n          onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\r\n          \r\n          />\r\n        )\r\n      } else if(buttonState === \"normal\"){\r\n        return (\r\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Text>hasCameraPermission === true? this.state.scannedData : \"Request Camera Permission\"</Text>\r\n            <TouchableOpacity\r\n            onPress={this.getPermissionsAsync}>\r\n              <Text>Scan QR code</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        );\r\n      }\r\n      \r\n    }\r\n\r\n    handleBarCodeScanned = ({ type, data }) => {\r\n      this.setState({ scanned: true, scannedData:data,buttonState : \"normal\" });\r\n      alert(`Bar code with type ${type} and data ${data} has been scanned!`);\r\n    };\r\n  }"]},"metadata":{},"sourceType":"module"}